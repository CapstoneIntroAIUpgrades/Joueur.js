// Generated by Creer, git hash fa0ddf38a9de12f1ec780817a1333033da78ca83
// This is a simple class to represent the GameObject object in the game. You can extend it by adding utility functions here in this file.

var Class = require("../utilities/class");
var Command = require("../utilities/command");
var BaseGameObject = require("../baseGameObject");

/// @class GameObject: An object in the game. The most basic class that all game classes should inherit from automatically.
var GameObject = Class(BaseGameObject, {
	/// initializes a GameObject with basic logic as provided by the Creer code generator
	// @param <object> data: initialization data
	init: function() {
		BaseGameObject.init.apply(this, arguments);


		// The following values should get overridden when delta states are merged, but we set them here as a reference for you to see what variables this class has.

		// A unique id for each instance of a GameObject or a sub class. Used for client and server communication. Should never change value after being set.
		this.id = "";
		// Any strings logged will be stored here when this game object logs the strings. Intended for debugging.
		this.logs = [];
	},


	/// adds a message to this game object's log. Intended for debugging purposes.
	// @param <string> message: A string to add to this GameObject's log. Intended for debugging.
	// @return <Command> the command for the server to run this function against game logic, then send back the updated game state
	log: function(message) {
		return new Command(this, "log", {
			message: message,
		});
	},
});

module.exports = GameObject;
